architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = file("src/main/resources/mercenaries-fabric.accessWidener")
}

configurations {
    common
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    common(project(path: ":Common", configuration: "namedElements")) { transitive false }

    modImplementation(group: 'ca.lukegrahamlandry.lib', name: 'WrapperLib-1.19-Fabric', version: '1.1.0') { transitive false }

    modImplementation("curse.maven:smartbrainlib-661293:4125897")
    modCompileOnly("curse.maven:smartbrainlib-661293:4125897")
}

processResources {
    filesMatching("fabric.mods.json") {
        expand "version": project.mod_version
    }
    inputs.property "fabric.mods.json", project.mod_version

    from project(':Common').sourceSets.main.resources
}

task renameJarForPublication(type: Zip, dependsOn: remapJar) {
    from remapJar.archiveFile.map { zipTree(it) }
    extension "jar"
    metadataCharset "UTF-8"
    destinationDirectory = base.libsDirectory
    classifier project.name
}

assemble.dependsOn renameJarForPublication

apply from: "https://moddingtutorials.org/publish.gradle"