loom {
    accessWidenerPath = project(":Common").loom.accessWidenerPath
    forge {
        // mixinConfig "modid.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    common(project(path: ":Common", configuration: "namedElements")) { transitive false }

    modImplementation(group: 'ca.lukegrahamlandry.lib', name: 'WrapperLib-1.19-Forge', version: '1.1.0') { transitive false }

    modImplementation("curse.maven:smartbrainlib-661293:4124615")
    modCompileOnly("curse.maven:smartbrainlib-661293:4124615")
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand "version": project.mod_version
    }
    inputs.property "META-INF/mods.toml", project.mod_version

    from project(':Common').sourceSets.main.resources
}

task renameJarForPublication(type: Zip, dependsOn: remapJar) {
    from remapJar.archiveFile.map { zipTree(it) }
    extension "jar"
    metadataCharset "UTF-8"
    destinationDirectory = base.libsDirectory
    classifier project.name
}

assemble.dependsOn renameJarForPublication

apply from: "https://moddingtutorials.org/publish.gradle"